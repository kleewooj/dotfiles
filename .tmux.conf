# change the prefix from 'C-b' to 'C-a'
# (remap capslock to CTRL for easy access)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# start with window 1 (instead of 0)
set -g base-index 1

# start with pane 1
set -g pane-base-index 1
set -g renumber-windows on

# split panes using | and -, make sure they open in the same path
unbind '"'
unbind %
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Move current pane to background window
bind m break-pane -d
bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# open new windows in the current path
bind c new-window -c "#{pane_current_path}"

# unbind p
# bind b previous-window

# shorten command delay
set -sg escape-time 1

# don't rename windows automatically
set -g allow-rename off

# mouse control (clickable windows, panes, resizable pane)
set -g mouse on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# bind-key -n 'C-\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# enable vi mode keys
set-window-option -g mode-keys vi

# set default terminal mode to 256 colors
set -g default-terminal "screen-256color"

################
# act like vim #
################

setw -g mode-keys vi
bind-key Escape copy-mode
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy '
unbind [
set-option -g history-limit 3000
bind k clear-history \; display-message "copy-mode history cleared!!"

########################
# Useful tmux features #
########################
bind-key h split-window -h "htop"
bind-key e split-window -v "~/dotfiles/bin/tmuxkillf.sh"
# Run FZF onto another pane
# bind-key f split-window -h "fzf"
# Switch sessions from all the existing sessions
# bind-key C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//'\
#                               | grep -v \"^$(tmux display-message p '#S')\$\"|\
#                               fzf --reverse | xargs tmux switch-client -t"

# Make C-j display a selectable list of sessions
# bind C-j choose-tree
bind C-j split-window -v "tmux list-sessions -F '#{session_activity}:#{session_name}'\
                         | sort -nr | cut -d ':' -f 2 | grep -v \"^$(tmux display-message -p \
                         '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane : join the current window as one pane from other window
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# You need to make sure to open another pane or window to make the below command work properly
# It will kill the current session if you try from the first pane!!
bind-key C-b send-keys 'tat && exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# reload config file
bind-key r source-file ~/.tmux.conf \; display-message "Tmux Config Reloaded!!"
###############################
## TPM : Tmux Plugin Manager ##
###############################
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-cpu'

# set -g @plugin 'egel/tmux-gruvbox'
# set -g @tmux-gruvbox 'dark' # or 'light'

# set -g @plugin 'dracula/tmux'
# set -g @dracula-cpu-usage true
# set -g @dracula-show-battery false
# set -g @dracula-show-network false
# set -g @dracula-show-location false
# set -g @dracula-show-left-icon session

# set -g @plugin 'jatap/tmux-base16-statusline'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'

# Simplify status bar display.
set -g status-left-length 40
set -g status-fg white
set -g status-bg black
# set -g status-left '[#H] '
set -g status-left '[#S] '
set -g status-right "#{?pane_synchronized,--SYNCED--,} #(is-online) #(battery -t -g black)  #(date '+%a %m/%d/%Y %l:%M %p') "
