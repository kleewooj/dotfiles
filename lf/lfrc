set shell sh
set shellopts '-eu'
set ifs "\n"
set drawbox
set scrolloff 10
set incsearch
set ignoredia
set period 2
set ratios 1:2:2
set hidden true
set previewer '~/.config/lf/scope'

map f ${{
    selected="$(fzf)"
    [ -d "$selected" ] && cmd=cd || cmd=select
    lf -remote "send $id $cmd '$selected'"
}}

# copied from ericmurphyxyz
# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd trash ${{
  trash "$f"
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" -d "${f%.*}" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# Trash bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

# Bindings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d

map au unarchive

# Basic Functions
map . set hidden!
map DD trash
map p paste
map x cut
map y copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
map C clear

map dd trash

# Movement
map gd cd ~/documents
map gD cd ~/downloads
map gc cd ~/.config
map gt cd ~/.Trash

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        application/pdf) lf -remote "send $id \$zathura \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}
